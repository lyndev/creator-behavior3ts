{"version":3,"sources":["assets/libs/b3/core/B3Tick.ts"],"names":[],"mappings":";;;;;;;AAGE;IAOE;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,sBAAI,6BAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAC3C,sBAAI,6BAAS;aAAb,cAAkB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAC3C;;;QAGI;IACJ,0BAAS,GAAT,UAAU,IAAe;QACvB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAE9B,wBAAwB;IAC1B,CAAC;IAED;;;QAGI;IACJ,yBAAQ,GAAR,UAAS,IAAe;QACtB,wBAAwB;IAC1B,CAAC;IAED;;;QAGI;IACJ,yBAAQ,GAAR,UAAS,IAAe;QACtB,wBAAwB;IAC1B,CAAC;IAED;;;QAGI;IACJ,0BAAS,GAAT,UAAU,IAAe;QACvB,wBAAwB;QACxB,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACxB,CAAC;IAED;;;QAGI;IACJ,yBAAQ,GAAR,UAAS,IAAe;QACtB,wBAAwB;IAC1B,CAAC;IACH,aAAC;AAAD,CA7DA,AA6DC,IAAA;AA7DY,wBAAM","file":"","sourceRoot":"/","sourcesContent":["import { B3BaseNode } from \"./B3BaseNode\";\nimport { B3Blackboard } from \"./B3Blackboard\";\n\n  export class B3Tick<Target = any> {\n    tree: any;\n    debug: any;\n    target: Target;\n    blackboard: B3Blackboard;\n    private _openNodes: string[];\n    private _nodeCount: number;\n    constructor() {\n      this.tree = null;\n      this.debug = null;\n      this.target = null;\n      this.blackboard = null;\n      this._openNodes = [];\n      this._nodeCount = 0;\n    }\n\n    get openNodes() { return this._openNodes; }\n    get nodeCount() { return this._nodeCount; }\n    /**\n     * node执行enter时候会调用\n     * @param node 发起调用的Node.\n     **/\n    enterNode(node:B3BaseNode) {\n      this._nodeCount++;\n      this._openNodes.push(node.id);\n\n      // TODO: call debug here\n    }\n\n    /**\n     * node执行openNode时执行这个方法\n     * @param node\n     **/\n    openNode(node:B3BaseNode) {\n      // TODO: call debug here\n    }\n\n    /**\n     * node执行tick时候会调用\n     * @param node\n     **/\n    tickNode(node:B3BaseNode) {\n      // TODO: call debug here\n    }\n\n    /**\n     * node执行close时候会调用\n     * @param node\n     **/\n    closeNode(node:B3BaseNode) {\n      // TODO: call debug here\n      this._openNodes.pop();\n    }\n\n    /**\n     * node执行exit时候会调用\n     * @param node\n     **/\n    exitNode(node:B3BaseNode) {\n      // TODO: call debug here\n    }\n  }"]}