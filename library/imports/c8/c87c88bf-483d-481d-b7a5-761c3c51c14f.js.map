{"version":3,"sources":["assets/libs/b3/decorators/B3RepeatUntilSuccess.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,0CAA0C;AAC1C,mDAAkD;AAIlD,sBAAsB;AACtB;IAA0C,wCAAW;IAEpD,8BAAY,CAAkB;eAC7B,kBAAM,CAAC,CAAC;IACT,CAAC;IAES,yCAAU,GAApB,UAAqB,CAAM;QAC1B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,mCAAI,GAAJ,UAAK,IAAY;QAChB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAGD,mCAAI,GAAJ,UAAK,IAAY;QAChB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAChB,OAAO,sBAAU,CAAC,KAAK,CAAC;SACxB;QAED,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,MAAM,GAAG,sBAAU,CAAC,KAAK,CAAC;QAE9B,OAAO,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE;YAC5C,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAElC,IAAI,MAAM,IAAI,sBAAU,CAAC,OAAO,EAAE;gBACjC,CAAC,EAAE,CAAC;aACJ;iBAAM;gBACN,MAAM;aACN;SACD;QAED,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;QACvD,OAAO,MAAM,CAAC;IACf,CAAC;IACF,2BAAC;AAAD,CApCA,AAoCC,CApCyC,yBAAW,GAoCpD;AApCY,oDAAoB","file":"","sourceRoot":"/","sourcesContent":["import { EnumStatus } from \"../Constants\";\nimport { B3Decorator } from \"../core/B3Decorator\";\nimport { B3Tick } from \"../core/B3Tick\";\nimport { IB3RepeaterProp } from \"./B3Repeater\";\n\n//重复n次，或者直到遇到不是失败的状态为止\nexport class B3RepeatUntilSuccess extends B3Decorator {\n\tmaxLoop: number;\n\tconstructor(d: IB3RepeaterProp) {\n\t\tsuper(d);\n\t}\n\n\tprotected _parseProp(d: any) {\n\t\tthis.maxLoop = d.maxLoop || -1;\n\t}\n\n\topen(tick: B3Tick) {\n\t\ttick.blackboard.set('i', 0, tick.tree.id, this.id);\n\t}\n\n\n\ttick(tick: B3Tick) {\n\t\tif (!this.child) {\n\t\t\treturn EnumStatus.ERROR;\n\t\t}\n\n\t\tvar i = tick.blackboard.get('i', tick.tree.id, this.id);\n\t\tvar status = EnumStatus.ERROR;\n\n\t\twhile (this.maxLoop < 0 || i < this.maxLoop) {\n\t\t\tstatus = this.child.execute(tick);\n\n\t\t\tif (status == EnumStatus.FAILURE) {\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\ti = tick.blackboard.set('i', i, tick.tree.id, this.id);\n\t\treturn status;\n\t}\n}"]}